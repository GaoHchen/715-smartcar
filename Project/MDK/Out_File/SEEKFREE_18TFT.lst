C51 COMPILER V9.57.0.0   SEEKFREE_18TFT                                                    07/17/2020 10:29:35 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE SEEKFREE_18TFT
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_18TFT.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_18TFT.c LARGE OMF2 OPTIMIZE
                    -(8,SPEED) INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\USE
                    -R\inc;..\USER\src;..\CODE) PRINT(.\Out_File\SEEKFREE_18TFT.lst) TABS(2) OBJECT(.\Out_File\SEEKFREE_18TFT.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2018,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          TFT
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ3184284598)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    IAR 8.3 or MDK 5.26
  15           * @Taobao      https://seekfree.taobao.com/
  16           * @date          2018-05-24
  17           * @note    
  18                    接线定义：
  19                    ------------------------------------ 
  20                    模块管脚            单片机管脚
  21                    SCL                 查看TFT_SCL宏定义的引脚     硬件SPI引脚不可随意切换
  22                    SDA                 查看TFT_SDA宏定义的引脚     硬件SPI引脚不可随意切换
  23                    RES                 查看REST_PIN宏定义的引脚    
  24                    DC                  查看DC_PIN宏定义的引脚  
  25                    CS                  查看TFT_CS宏定义的引脚      硬件SPI引脚不可随意切换
  26                    
  27                    电源引脚
  28                    BL  3.3V电源（背光控制引脚，也可以接PWM来控制亮度）
  29                    VCC 3.3V电源
  30                    GND 电源地
  31                    最大分辨率128*160
  32                    ------------------------------------ 
  33          
  34           *********************************************************************************************************
             -***********/
  35          
  36          
  37          
  38          
  39          
  40          
  41          
  42          #include "zf_spi.h"
  43          #include "zf_pca_delay.h"
  44          #include "SEEKFREE_FONT.h"
  45          #include "SEEKFREE_PRINTF.h"
  46          #include "SEEKFREE_18TFT.h"
  47          
  48          void lcd_writeIndex(uint8 dat)      //写命令
  49          { 
  50   1          TFT_CS(0);
  51   1        TFT_DC(0);
C51 COMPILER V9.57.0.0   SEEKFREE_18TFT                                                    07/17/2020 10:29:35 PAGE 2   

  52   1        spi_mosi(dat);
  53   1          TFT_CS(1);
  54   1      }
  55          
  56          void lcd_writeData(uint8 dat)     //写数据
  57          {
  58   1      
  59   1        
  60   1          TFT_CS(0);
  61   1        TFT_DC(1);
  62   1        spi_mosi(dat);
  63   1          TFT_CS(1);
  64   1      
  65   1      }
  66          
  67          void lcd_writedata_16bit(uint16 dat)  //向液晶屏写一个16位数据
  68          {
  69   1      
  70   1          uint8 dat1[2];
  71   1          dat1[0] = dat >> 8;
  72   1          dat1[1] = (uint8)dat;
  73   1        
  74   1          TFT_CS(0);
  75   1          TFT_DC(1);
  76   1        spi_mosi(dat1[0]);
  77   1        spi_mosi(dat1[1]);
  78   1          TFT_CS(1);
  79   1      
  80   1      }
  81          
  82          //--------------------------------------------------------------------------------------------------------
             ------------
  83          //  @brief      液晶坐标设置
  84          //  @param      x_start       坐标x方向的起点
  85          //  @param      y_start       坐标y方向的起点
  86          //  @param      x_end         坐标x方向的终点
  87          //  @param      y_end         坐标y方向的终点
  88          //  @return     void
  89          //  @since      v1.0
  90          //  Sample usage:               lcd_set_region(0,0,10,10);// x、y的起点都是0，终点都是10
  91          //--------------------------------------------------------------------------------------------------------
             ------------
  92          void lcd_set_region(unsigned int x_start,unsigned int y_start,unsigned int x_end,unsigned int y_end)
  93          { 
  94   1      
  95   1          
  96   1      #if (0 == TFT_DISPLAY_DIR || 1 == TFT_DISPLAY_DIR)
  97   1          lcd_writeIndex(0x2a);
  98   1        lcd_writeData(0x00);
  99   1        lcd_writeData(x_start+2);
 100   1        lcd_writeData(0x00);
 101   1        lcd_writeData(x_end+2);
 102   1      
 103   1        lcd_writeIndex(0x2b);
 104   1        lcd_writeData(0x00);
 105   1        lcd_writeData(y_start+1);
 106   1        lcd_writeData(0x00);
 107   1        lcd_writeData(y_end+1); 
 108   1      
 109   1      #elif(2 == TFT_DISPLAY_DIR || 3 == TFT_DISPLAY_DIR)
                  lcd_writeIndex(0x2a);
                lcd_writeData(0x00);
C51 COMPILER V9.57.0.0   SEEKFREE_18TFT                                                    07/17/2020 10:29:35 PAGE 3   

                lcd_writeData(x_start+1);
                lcd_writeData(0x0);
                lcd_writeData(x_end+1);
              
                lcd_writeIndex(0x2b);
                lcd_writeData(0x00);
                lcd_writeData(y_start+2);
                lcd_writeData(0x00);
                lcd_writeData(y_end+2); 
              
              #endif
 123   1          
 124   1          lcd_writeIndex(0x2c);
 125   1      }
 126          
 127          //--------------------------------------------------------------------------------------------------------
             ------------
 128          //  @brief      液晶清屏函数
 129          //  @param      color         颜色设置
 130          //  @return     void
 131          //  @since      v1.0
 132          //  Sample usage:               lcd_clear(YELLOW);// 全屏设置为黄色
 133          //--------------------------------------------------------------------------------------------------------
             ------------
 134          void lcd_clear(int color)
 135          {
 136   1        uint8 i,j;
 137   1        lcd_set_region(0,0,TFT_X_MAX-1,TFT_Y_MAX-1);
 138   1        for (i=0;i<TFT_Y_MAX;i++)
 139   1            for (j=0;j<TFT_X_MAX;j++)
 140   1                lcd_writedata_16bit(color);
 141   1      }
 142          
 143          
 144          //--------------------------------------------------------------------------------------------------------
             ------------
 145          //  @brief      液晶初始化
 146          //  @return     void
 147          //  @since      v1.0
 148          //  Sample usage:               
 149          //--------------------------------------------------------------------------------------------------------
             ------------
 150          void lcd_init(void)
 151          { 
 152   1        spi_init(TFT_SPIN, TFT_SCL_PIN, TFT_SDA_PIN, TFT_SDA_IN_PIN, 0, MASTER, SPI_SYSclk_DIV_4);
 153   1      
 154   1          TFT_REST(0);
 155   1          pca_delay_ms(10);
 156   1          TFT_REST(1);
 157   1          pca_delay_ms(120);
 158   1          lcd_writeIndex(0x11);
 159   1          pca_delay_ms(120);
 160   1      
 161   1          lcd_writeIndex(0xB1); 
 162   1          lcd_writeData(0x01); 
 163   1          lcd_writeData(0x2C); 
 164   1          lcd_writeData(0x2D); 
 165   1          
 166   1          lcd_writeIndex(0xB2); 
 167   1          lcd_writeData(0x01); 
 168   1          lcd_writeData(0x2C); 
 169   1          lcd_writeData(0x2D); 
C51 COMPILER V9.57.0.0   SEEKFREE_18TFT                                                    07/17/2020 10:29:35 PAGE 4   

 170   1          
 171   1          lcd_writeIndex(0xB3); 
 172   1          lcd_writeData(0x01); 
 173   1          lcd_writeData(0x2C); 
 174   1          lcd_writeData(0x2D); 
 175   1          lcd_writeData(0x01); 
 176   1          lcd_writeData(0x2C); 
 177   1          lcd_writeData(0x2D); 
 178   1          
 179   1          lcd_writeIndex(0xB4);
 180   1          lcd_writeData(0x07); 
 181   1      
 182   1          lcd_writeIndex(0xC0); 
 183   1          lcd_writeData(0xA2); 
 184   1          lcd_writeData(0x02); 
 185   1          lcd_writeData(0x84); 
 186   1          lcd_writeIndex(0xC1); 
 187   1          lcd_writeData(0xC5); 
 188   1          
 189   1          lcd_writeIndex(0xC2); 
 190   1          lcd_writeData(0x0A); 
 191   1          lcd_writeData(0x00); 
 192   1          
 193   1          lcd_writeIndex(0xC3); 
 194   1          lcd_writeData(0x8A); 
 195   1          lcd_writeData(0x2A); 
 196   1          lcd_writeIndex(0xC4); 
 197   1          lcd_writeData(0x8A); 
 198   1          lcd_writeData(0xEE); 
 199   1          
 200   1          lcd_writeIndex(0xC5);
 201   1          lcd_writeData(0x0E); 
 202   1          
 203   1          lcd_writeIndex(0x36);
 204   1          switch(TFT_DISPLAY_DIR)//y x v
 205   1          {
 206   2              case 0: lcd_writeData(1<<7 | 1<<6 | 0<<5);  break;  //竖屏模式
 207   2              case 1: lcd_writeData(0<<7 | 0<<6 | 0<<5);  break;  //竖屏模式  旋转180
 208   2              case 2: lcd_writeData(1<<7 | 0<<6 | 1<<5);  break;  //横屏模式
 209   2              case 3: lcd_writeData(0<<7 | 1<<6 | 1<<5);  break;  //横屏模式  旋转180
 210   2          }
 211   1      
 212   1          lcd_writeIndex(0xe0); 
 213   1          lcd_writeData(0x0f); 
 214   1          lcd_writeData(0x1a); 
 215   1          lcd_writeData(0x0f); 
 216   1          lcd_writeData(0x18); 
 217   1          lcd_writeData(0x2f); 
 218   1          lcd_writeData(0x28); 
 219   1          lcd_writeData(0x20); 
 220   1          lcd_writeData(0x22); 
 221   1          lcd_writeData(0x1f); 
 222   1          lcd_writeData(0x1b); 
 223   1          lcd_writeData(0x23); 
 224   1          lcd_writeData(0x37); 
 225   1          lcd_writeData(0x00);  
 226   1          lcd_writeData(0x07); 
 227   1          lcd_writeData(0x02); 
 228   1          lcd_writeData(0x10); 
 229   1          
 230   1          lcd_writeIndex(0xe1); 
 231   1          lcd_writeData(0x0f); 
C51 COMPILER V9.57.0.0   SEEKFREE_18TFT                                                    07/17/2020 10:29:35 PAGE 5   

 232   1          lcd_writeData(0x1b); 
 233   1          lcd_writeData(0x0f); 
 234   1          lcd_writeData(0x17); 
 235   1          lcd_writeData(0x33); 
 236   1          lcd_writeData(0x2c); 
 237   1          lcd_writeData(0x29); 
 238   1          lcd_writeData(0x2e); 
 239   1          lcd_writeData(0x30); 
 240   1          lcd_writeData(0x30); 
 241   1          lcd_writeData(0x39); 
 242   1          lcd_writeData(0x3f); 
 243   1          lcd_writeData(0x00); 
 244   1          lcd_writeData(0x07); 
 245   1          lcd_writeData(0x03); 
 246   1          lcd_writeData(0x10);  
 247   1          
 248   1          lcd_writeIndex(0x2a);
 249   1          lcd_writeData(0x00);
 250   1          lcd_writeData(0x00+2);
 251   1          lcd_writeData(0x00);
 252   1          lcd_writeData(0x80+2);
 253   1          
 254   1          lcd_writeIndex(0x2b);
 255   1          lcd_writeData(0x00);
 256   1          lcd_writeData(0x00+3);
 257   1          lcd_writeData(0x00);
 258   1          lcd_writeData(0x80+3);
 259   1          
 260   1          lcd_writeIndex(0xF0); 
 261   1          lcd_writeData(0x01); 
 262   1          lcd_writeIndex(0xF6);
 263   1          lcd_writeData(0x00); 
 264   1          
 265   1          lcd_writeIndex(0x3A);
 266   1          lcd_writeData(0x05); 
 267   1          lcd_writeIndex(0x29);
 268   1      
 269   1          lcd_clear(WHITE);//全白
 270   1      }
 271          
 272          //--------------------------------------------------------------------------------------------------------
             ------------
 273          //  @brief      液晶画点
 274          //  @param      x               坐标x方向的起点
 275          //  @param      y               坐标y方向的起点
 276          //  @param      dat             需要显示的颜色
 277          //  @return     void
 278          //  @since      v1.0
 279          //  Sample usage:               lcd_drawpoint(0,0,RED);  //坐标0,0画一个红色的点
 280          //--------------------------------------------------------------------------------------------------------
             ------------
 281          void lcd_drawpoint(uint16 x,uint16 y,uint16 color)
 282          {
 283   1          lcd_set_region(x,y,x,y);
 284   1          lcd_writedata_16bit(color);
 285   1      }
 286          
 287          
 288          
 289          //--------------------------------------------------------------------------------------------------------
             ------------
 290          //  @brief      液晶显示字符
C51 COMPILER V9.57.0.0   SEEKFREE_18TFT                                                    07/17/2020 10:29:35 PAGE 6   

 291          //  @param      x               坐标x方向的起点 参数范围 0 -（TFT_X_MAX-1）
 292          //  @param      y               坐标y方向的起点 参数范围 0 -（TFT_Y_MAX/16-1）
 293          //  @param      dat             需要显示的字符
 294          //  @return     void
 295          //  @since      v1.0
 296          //  Sample usage:               lcd_showchar(0,0,'x');//坐标0,0写一个字符x
 297          //--------------------------------------------------------------------------------------------------------
             ------------
 298          void lcd_showchar(uint16 x,uint16 y,const int8 dat)
 299          {
 300   1        uint8 i,j;
 301   1        uint8 temp;
 302   1          
 303   1        for(i=0; i<16; i++)
 304   1        {
 305   2          lcd_set_region(x,y+i,x+7,y+i);
 306   2          temp = tft_ascii[dat-32][i];//减32因为是取模是从空格开始取得 空格在ascii中序号是32
 307   2          for(j=0; j<8; j++)
 308   2          {
 309   3            if(temp&0x01) lcd_writedata_16bit(TFT_PENCOLOR);
 310   3            else      lcd_writedata_16bit(TFT_BGCOLOR);
 311   3            temp>>=1;
 312   3          }
 313   2        }
 314   1      }
 315          
 316          //--------------------------------------------------------------------------------------------------------
             ------------
 317          //  @brief      液晶显示字符串
 318          //  @param      x               坐标x方向的起点  参数范围 0 -（TFT_X_MAX-1）
 319          //  @param      y               坐标y方向的起点  参数范围 0 -（TFT_Y_MAX/16-1）
 320          //  @param      dat             需要显示的字符串
 321          //  @return     void
 322          //  @since      v1.0
 323          //  Sample usage:               lcd_showstr(0,0,"seekfree");
 324          //--------------------------------------------------------------------------------------------------------
             ------------
 325          void lcd_showstr(uint16 x,uint16 y,const int8 dat[])
 326          {
 327   1        uint16 j;
 328   1        
 329   1        j = 0;
 330   1        while(dat[j] != '\0')
 331   1        {
 332   2          lcd_showchar(x+8*j,y*16,dat[j]);
 333   2          j++;
 334   2        }
 335   1      }
 336          
 337          //--------------------------------------------------------------------------------------------------------
             ------------
 338          //  @brief      液晶显示8位有符号
 339          //  @param      x               坐标x方向的起点  参数范围 0 -（TFT_X_MAX-1）
 340          //  @param      y               坐标y方向的起点  参数范围 0 -（TFT_Y_MAX/16-1）
 341          //  @param      dat             需要显示的变量，数据类型int8
 342          //  @return     void
 343          //  @since      v1.0
 344          //  Sample usage:               lcd_showint8(0,0,x);//x为int8类型
 345          //--------------------------------------------------------------------------------------------------------
             ------------
 346          void lcd_showint8(uint16 x,uint16 y,int8 dat)
 347          {
C51 COMPILER V9.57.0.0   SEEKFREE_18TFT                                                    07/17/2020 10:29:35 PAGE 7   

 348   1        uint8 a[3];
 349   1        uint8 i;
 350   1        if(dat<0)
 351   1        {
 352   2          lcd_showchar(x,y*16,'-');
 353   2          dat = -dat;
 354   2        }
 355   1        else  lcd_showchar(x,y*16,' ');
 356   1        
 357   1        a[0] = dat/100;
 358   1        a[1] = dat/10%10;
 359   1        a[2] = dat%10;
 360   1        i = 0;
 361   1        while(i<3)
 362   1        {
 363   2          lcd_showchar(x+(8*(i+1)),y*16,'0' + a[i]);
 364   2          i++;
 365   2        }
 366   1      }
 367          
 368          //--------------------------------------------------------------------------------------------------------
             ------------
 369          //  @brief      液晶显示8位无符号
 370          //  @param      x               坐标x方向的起点 参数范围 0 -（TFT_X_MAX-1）
 371          //  @param      y               坐标y方向的起点 参数范围 0 -（TFT_Y_MAX/16-1）
 372          //  @param      dat             需要显示的变量，数据类型uint8
 373          //  @return     void
 374          //  @since      v1.0
 375          //  Sample usage:               lcd_showuint8(0,0,x);//x为uint8类型
 376          //--------------------------------------------------------------------------------------------------------
             ------------
 377          void lcd_showuint8(uint16 x,uint16 y,uint8 dat)
 378          {
 379   1        uint8 a[3];
 380   1        uint8 i;
 381   1        
 382   1        a[0] = dat/100;
 383   1        a[1] = dat/10%10;
 384   1        a[2] = dat%10;
 385   1        i = 0;
 386   1        while(i<3)
 387   1        {
 388   2          lcd_showchar(x+(8*i),y*16,'0' + a[i]);
 389   2          i++;
 390   2        }
 391   1        
 392   1      }
 393          
 394          //--------------------------------------------------------------------------------------------------------
             ------------
 395          //  @brief      液晶显示16位有符号
 396          //  @param      x               坐标x方向的起点 参数范围 0 -（TFT_X_MAX-1）
 397          //  @param      y               坐标y方向的起点 参数范围 0 -（TFT_Y_MAX/16-1）
 398          //  @param      dat             需要显示的变量，数据类型int16
 399          //  @return     void
 400          //  @since      v1.0
 401          //  Sample usage:               lcd_showint16(0,0,x);//x为int16类型
 402          //--------------------------------------------------------------------------------------------------------
             ------------
 403          void lcd_showint16(uint16 x,uint16 y,int16 dat)
 404          {
 405   1        uint8 a[5];
C51 COMPILER V9.57.0.0   SEEKFREE_18TFT                                                    07/17/2020 10:29:35 PAGE 8   

 406   1        uint8 i;
 407   1        if(dat<0)
 408   1        {
 409   2          lcd_showchar(x,y*16,'-');
 410   2          dat = -dat;
 411   2        }
 412   1        else  lcd_showchar(x,y*16,' ');
 413   1      
 414   1        a[0] = dat/10000;
 415   1        a[1] = dat/1000%10;
 416   1        a[2] = dat/100%10;
 417   1        a[3] = dat/10%10;
 418   1        a[4] = dat%10;
 419   1        
 420   1        i = 0;
 421   1        while(i<5)
 422   1        {
 423   2          lcd_showchar(x+(8*(i+1)),y*16,'0' + a[i]);
 424   2          i++;
 425   2        }
 426   1      }
 427          
 428          //--------------------------------------------------------------------------------------------------------
             ------------
 429          //  @brief      液晶显示16位无符号
 430          //  @param      x               坐标x方向的起点 参数范围 0 -（TFT_X_MAX-1）
 431          //  @param      y               坐标y方向的起点 参数范围 0 -（TFT_Y_MAX/16-1）
 432          //  @param      dat             需要显示的变量，数据类型uint16
 433          //  @return     void
 434          //  @since      v1.0
 435          //  Sample usage:               lcd_showuint16(0,0,x);//x为uint16类型
 436          //--------------------------------------------------------------------------------------------------------
             ------------
 437          void lcd_showuint16(uint16 x,uint16 y,uint16 dat)
 438          {
 439   1        uint8 a[5];
 440   1        uint8 i;
 441   1      
 442   1        a[0] = dat/10000;
 443   1        a[1] = dat/1000%10;
 444   1        a[2] = dat/100%10;
 445   1        a[3] = dat/10%10;
 446   1        a[4] = dat%10;
 447   1        
 448   1        i = 0;
 449   1        while(i<5)
 450   1        {
 451   2          lcd_showchar(x+(8*i),y*16,'0' + a[i]);
 452   2          i++;
 453   2        }
 454   1      }
 455          
 456          //--------------------------------------------------------------------------------------------------------
             ------------
 457          //  @brief      液晶显示32位有符号(去除整数部分无效的0)
 458          //  @param      x               坐标x方向的起点 参数范围 0 -（TFT_X_MAX-1）
 459          //  @param      y               坐标y方向的起点 参数范围 0 -（TFT_Y_MAX/16-1）
 460          //  @param      dat             需要显示的变量，数据类型uint32
 461          //  @param      num             需要显示的位数 最高10位  不包含正负号
 462          //  @return     void
 463          //  @since      v1.0
 464          //  Sample usage:               lcd_showuint32(0,0,x,3);//x可以为int32 uint16 int16 uint8 int8类型
C51 COMPILER V9.57.0.0   SEEKFREE_18TFT                                                    07/17/2020 10:29:35 PAGE 9   

 465          //  Sample usage:               负数会显示一个 ‘-’号   正数显示一个空格
 466          //--------------------------------------------------------------------------------------------------------
             ------------
 467          void lcd_showint32(uint16 x,uint16 y,int32 dat,uint8 num)
 468          {
 469   1          int8    buff[34];
 470   1          uint8   length;
 471   1          
 472   1          if(10<num)      num = 10;
 473   1          
 474   1          num++;
 475   1          if(0>dat)   length = zf_sprintf( &buff[0],"%d",dat);//负数
 476   1          else
 477   1          {
 478   2              buff[0] = ' ';
 479   2              length = zf_sprintf( &buff[1],"%d",dat);
 480   2              length++;
 481   2          }
 482   1          while(length < num)
 483   1          {
 484   2              buff[length] = ' ';
 485   2              length++;
 486   2          }
 487   1          buff[num] = '\0';
 488   1      
 489   1          lcd_showstr(x, y, buff);  //显示数字
 490   1      }
 491          
 492          
 493          //--------------------------------------------------------------------------------------------------------
             ------------
 494          //  @brief      液晶显示浮点数(去除整数部分无效的0)
 495          //  @param      x               坐标x方向的起点 参数范围 0 -（TFT_X_MAX-1）
 496          //  @param      y               坐标y方向的起点 参数范围 0 -（TFT_Y_MAX/16-1）
 497          //  @param      dat             需要显示的变量，数据类型float或double
 498          //  @param      num             整数位显示长度   最高10位  
 499          //  @param      pointnum        小数位显示长度   最高6位
 500          //  @return     void
 501          //  @since      v1.0
 502          //  Sample usage:               lcd_showfloat(0,0,x,2,3);//显示浮点数   整数显示2位   小数显示三位
 503          //  @note                       特别注意当发现小数部分显示的值与你写入的值不一样的时候，
 504          //                              可能是由于浮点数精度丢失问题导致的，这并不是显示函数的问题，
 505          //                              有关问题的详情，请自行百度学习   浮点数精度丢失问题。
 506          //                              负数会显示一个 ‘-’号   正数显示一个空格
 507          //--------------------------------------------------------------------------------------------------------
             ------------
 508          void lcd_showfloat(uint16 x,uint16 y,double dat,uint8 num,uint8 pointnum)
 509          {
 510   1          uint8   length;
 511   1        int8    buff[34];
 512   1        int8    start,end,point;
 513   1      
 514   1        if(6<pointnum)  pointnum = 6;
 515   1          if(10<num)      num = 10;
 516   1              
 517   1          if(0>dat)   length = zf_sprintf( &buff[0],"%f",dat);//负数
 518   1          else
 519   1          {
 520   2              length = zf_sprintf( &buff[1],"%f",dat);
 521   2              length++;
 522   2          }
 523   1          point = length - 7;         //计算小数点位置
C51 COMPILER V9.57.0.0   SEEKFREE_18TFT                                                    07/17/2020 10:29:35 PAGE 10  

 524   1          start = point - num - 1;    //计算起始位
 525   1          end = point + pointnum + 1; //计算结束位
 526   1          while(0>start)//整数位不够  末尾应该填充空格
 527   1          {
 528   2              buff[end] = ' ';
 529   2              end++;
 530   2              start++;
 531   2          }
 532   1          
 533   1          if(0>dat)   buff[start] = '-';
 534   1          else        buff[start] = ' ';
 535   1          
 536   1          buff[end] = '\0';
 537   1      
 538   1          lcd_showstr(x, y, buff);  //显示数字
 539   1      }
 540          
 541          
 542          
 543          //--------------------------------------------------------------------------------------------------------
             ------------
 544          //  @brief      显示40*40 QQ图片
 545          //  @param      *p          图像数组地址
 546          //  @return     void
 547          //  @since      v1.0
 548          //  Sample usage:          
 549          //--------------------------------------------------------------------------------------------------------
             ------------
 550          void showimage(const unsigned char *p) 
 551          {
 552   1          int i,j,k; 
 553   1        unsigned char picH,picL;
 554   1        lcd_clear(WHITE); //清屏  
 555   1        
 556   1        for(k=0;k<4;k++)
 557   1        {
 558   2            for(j=0;j<3;j++)
 559   2          { 
 560   3            lcd_set_region(40*j,40*k,40*j+39,40*k+39);    //坐标设置
 561   3              for(i=0;i<40*40;i++)
 562   3             {  
 563   4              picL=*(p+i*2);  //数据低位在前
 564   4              picH=*(p+i*2+1);        
 565   4              lcd_writedata_16bit(picH<<8|picL);              
 566   4             }  
 567   3           }
 568   2        }   
 569   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2837    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =   ----     178
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
C51 COMPILER V9.57.0.0   SEEKFREE_18TFT                                                    07/17/2020 10:29:35 PAGE 11  

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
