C51 COMPILER V9.57.0.0   ISR                                                               07/17/2020 10:29:40 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE ISR
OBJECT MODULE PLACED IN .\Out_File\isr.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\USER\src\isr.c LARGE OMF2 OPTIMIZE(8,SPEED) INCDIR(..\..\Libraries\li
                    -braries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\USER\inc;..\USER\src;..\CODE) PRINT(.\
                    -Out_File\isr.lst) TABS(2) OBJECT(.\Out_File\isr.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          isr
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8G2K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          #include "headfile.h"
  20          
  21          //UART1中断
  22          void UartIsr() interrupt 4
  23          {
  24   1          uint8 res;
  25   1        static uint8 dwon_count;
  26   1          if(UART1_GET_TX_FLAG)
  27   1          {
  28   2              UART1_CLEAR_TX_FLAG;
  29   2              busy[1] = 0;
  30   2          }
  31   1          if(UART1_GET_RX_FLAG)
  32   1          {
  33   2              UART1_CLEAR_RX_FLAG;
  34   2          //接收数据寄存器为：SBUF
  35   2              res = SBUF;
  36   2              if(res == 0x7F)
  37   2              {
  38   3                  if(dwon_count++ > 20)
  39   3              //代码软复位到ISP监控程序区，实现自动下载
  40   3                      IAP_CONTR = 0x60;
  41   3              }
  42   2              else
  43   2              {
  44   3                  dwon_count = 0;
  45   3              }
  46   2          
  47   2          }
  48   1      }
  49          
  50          //UART2中断
  51          void Uart2Isr() interrupt 8
C51 COMPILER V9.57.0.0   ISR                                                               07/17/2020 10:29:40 PAGE 2   

  52          {
  53   1          if(UART2_GET_TX_FLAG)
  54   1        {
  55   2              UART2_CLEAR_TX_FLAG;
  56   2          busy[2] = 0;
  57   2        }
  58   1          if(UART2_GET_RX_FLAG)
  59   1        {
  60   2              UART2_CLEAR_RX_FLAG;
  61   2          //接收数据寄存器为：S2BUF
  62   2      
  63   2        }
  64   1      }
  65          
  66          
  67          //UART3中断
  68          void Uart3Isr() interrupt 17
  69          {
  70   1          if(UART3_GET_TX_FLAG)
  71   1        {
  72   2              UART3_CLEAR_TX_FLAG;
  73   2          busy[3] = 0;
  74   2        }
  75   1          if(UART3_GET_RX_FLAG)
  76   1        {
  77   2              UART3_CLEAR_RX_FLAG;
  78   2          //接收数据寄存器为：S3BUF
  79   2      
  80   2        }
  81   1      }
  82          
  83          
  84          //UART4中断
  85          
  86          void Uart4Isr() interrupt 18
  87          {
  88   1          if(UART4_GET_TX_FLAG)
  89   1        {
  90   2              UART4_CLEAR_TX_FLAG;
  91   2          busy[4] = 0;
  92   2        }
  93   1          if(UART4_GET_RX_FLAG)
  94   1        {
  95   2              UART4_CLEAR_RX_FLAG;
  96   2          //接收数据寄存器为：S4BUF;
  97   2      
  98   2        }
  99   1      }
 100          
 101          
 102          ////PCA周期定时器中断
 103          //void PCA_Isr() interrupt 7
 104          //{
 105          //  if(PCA0_GET_FLAG)
 106          //  {
 107          //    //清除中断标志位
 108          //    PCA_CLEAR_FLAG(PCA_0);  
 109          
 110          //    //重载计数器
 111          //    pca_reload_counter(PCA_0);
 112          //    
 113          //    //线性CCD采集数据
C51 COMPILER V9.57.0.0   ISR                                                               07/17/2020 10:29:40 PAGE 3   

 114          //    ccd_collect();
 115          //    //采集完成标志位置1
 116          //    tsl1401_finish_flag = 1;
 117          //    
 118          //    
 119          //  }
 120          //  
 121          //  if(PCA1_GET_FLAG)
 122          //  {
 123          //    //清除中断标志位
 124          //    PCA_CLEAR_FLAG(PCA_1);  
 125          //    //重载计数器
 126          //    pca_reload_counter(PCA_1);
 127          
 128          //  }
 129          //  //  PCA_2已做延时
 130          //  if(PCA2_GET_FLAG)
 131          //  {
 132          //    //清除中断标志位
 133          //    PCA_CLEAR_FLAG(PCA_2);  
 134          //    //重载计数器
 135          //    //pca_reload_counter(PCA_2);
 136          
 137          //  }
 138          //  
 139          //}
 140          
 141          
 142          
 143          void INT0_Isr() interrupt 0
 144          {
 145   1        //此标志位，硬件自动清零。
 146   1        //INT0_CLEAR_FLAG;
 147   1        
 148   1      }
 149          void INT1_Isr() interrupt 2
 150          {
 151   1        //此标志位，硬件自动清零。
 152   1        //INT1_CLEAR_FLAG;
 153   1        
 154   1      }
 155          void INT2_Isr() interrupt 10
 156          {
 157   1        INT2_CLEAR_FLAG;
 158   1        
 159   1      }
 160          void INT3_Isr() interrupt 11
 161          {
 162   1        INT3_CLEAR_FLAG;
 163   1        
 164   1      }
 165          
 166          void INT4_Isr() interrupt 16
 167          {
 168   1        INT4_CLEAR_FLAG;
 169   1      
 170   1      }
 171          
 172          
 173          //void INT0_Routine(void) interrupt 0
 174          //void TM0_Rountine(void) interrupt 1
 175          //void INT1_Routine(void) interrupt 2
C51 COMPILER V9.57.0.0   ISR                                                               07/17/2020 10:29:40 PAGE 4   

 176          //void TM1_Rountine(void) interrupt 3
 177          //void UART1_Routine(void) interrupt 4
 178          //void ADC_Routine(void) interrupt 5
 179          //void LVD_Routine(void) interrupt 6
 180          //void PCA_Routine(void) interrupt 7
 181          //void UART2_Routine(void) interrupt 8
 182          //void SPI_Routine(void) interrupt 9
 183          //void INT2_Routine(void) interrupt 10
 184          //void INT3_Routine(void) interrupt 11
 185          //void TM2_Routine(void) interrupt 12
 186          //void INT4_Routine(void) interrupt 16
 187          //void UART3_Routine(void) interrupt 17
 188          //void UART4_Routine(void) interrupt 18
 189          //void TM3_Routine(void) interrupt 19
 190          //void TM4_Routine(void) interrupt 20
 191          //void CMP_Routine(void) interrupt 21
 192          //void PWM0_Routine(void) interrupt 22
 193          //void PWM0FD_Routine(void) interrupt 23
 194          //void I2C_Routine(void) interrupt 24
 195          //void PWM1_Routine(void) interrupt 28
 196          //void PWM2_Routine(void) interrupt 29
 197          //void PWM3_Routine(void) interrupt 30
 198          //void PWM4_Routine(void) interrupt 31
 199          //void PWM5_Routine(void) interrupt 32
 200          //void PWM2FD_Routine(void) interrupt 33
 201          //void PWM4FD_Routine(void) interrupt 34
 202          //void TKSU_Routine(void) interrupt 35


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    217    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
